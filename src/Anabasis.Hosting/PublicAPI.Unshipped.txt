#nullable enable
Anabasis.Hosting.AnabasisApp
Anabasis.Hosting.AnabasisApp.AnabasisApp(Microsoft.Extensions.Hosting.IHost! host) -> void
Anabasis.Hosting.AnabasisApp.Configuration.get -> Microsoft.Extensions.Configuration.IConfiguration!
Anabasis.Hosting.AnabasisApp.Dispose() -> void
Anabasis.Hosting.AnabasisApp.Environment.get -> Microsoft.Extensions.Hosting.IHostEnvironment!
Anabasis.Hosting.AnabasisApp.Lifetime.get -> Microsoft.Extensions.Hosting.IHostApplicationLifetime!
Anabasis.Hosting.AnabasisApp.Logger.get -> Microsoft.Extensions.Logging.ILogger!
Anabasis.Hosting.AnabasisApp.RunAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Anabasis.Hosting.AnabasisApp.Services.get -> System.IServiceProvider!
Anabasis.Hosting.AnabasisWindowingOptions
Anabasis.Hosting.AnabasisWindowingOptions.AnabasisWindowingOptions() -> void
Anabasis.Hosting.Builder.AnabasisAppBuilder
Anabasis.Hosting.Builder.AnabasisAppBuilder.Build() -> Anabasis.Hosting.AnabasisApp!
Anabasis.Hosting.Builder.AnabasisAppBuilder.Configuration.get -> Microsoft.Extensions.Configuration.ConfigurationManager!
Anabasis.Hosting.Builder.AnabasisAppBuilder.ConfigureHost(System.Action<Microsoft.Extensions.Hosting.IHostBuilder!>! func) -> Anabasis.Hosting.Builder.AnabasisAppBuilder!
Anabasis.Hosting.Builder.AnabasisAppBuilder.Environment.get -> Microsoft.Extensions.Hosting.IHostEnvironment!
Anabasis.Hosting.Builder.AnabasisAppBuilder.Host.get -> Microsoft.Extensions.Hosting.IHostBuilder!
Anabasis.Hosting.Builder.AnabasisAppBuilder.Logging.get -> Microsoft.Extensions.Logging.ILoggingBuilder!
Anabasis.Hosting.Builder.AnabasisAppBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
Anabasis.Hosting.Builder.AnabasisAppBuilderExtensions
Anabasis.Hosting.Builder.AnabasisAppOptions
Anabasis.Hosting.Builder.AnabasisAppOptions.AnabasisAppOptions() -> void
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.AnabasisAppHostBuilder(Microsoft.Extensions.Hosting.IHostBuilder! hostBuilder) -> void
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.ConfigureAppConfiguration(System.Action<Microsoft.Extensions.Configuration.IConfigurationBuilder!>! configureDelegate) -> Anabasis.Hosting.Hosting.AnabasisAppHostBuilder!
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.ConfigureAppConfiguration(System.Action<Microsoft.Extensions.Hosting.HostBuilderContext!, Microsoft.Extensions.Configuration.IConfigurationBuilder!>! configureDelegate) -> Anabasis.Hosting.Hosting.AnabasisAppHostBuilder!
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.ConfigureLogging(System.Action<Microsoft.Extensions.Hosting.HostBuilderContext!, Microsoft.Extensions.Logging.ILoggingBuilder!>! configureLogging) -> Anabasis.Hosting.Hosting.AnabasisAppHostBuilder!
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.ConfigureLogging(System.Action<Microsoft.Extensions.Logging.ILoggingBuilder!>! configureLogging) -> Anabasis.Hosting.Hosting.AnabasisAppHostBuilder!
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.ConfigureServices(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection!>! configureDelegate) -> Anabasis.Hosting.Hosting.AnabasisAppHostBuilder!
Anabasis.Hosting.Hosting.AnabasisAppHostBuilder.ConfigureServices(System.Action<Microsoft.Extensions.Hosting.HostBuilderContext!, Microsoft.Extensions.DependencyInjection.IServiceCollection!>! configureDelegate) -> Anabasis.Hosting.Hosting.AnabasisAppHostBuilder!
Anabasis.Hosting.Hosting.AnabasisHostBuilderExtensions
Anabasis.Hosting.Hosting.AnabasisServiceCollectionExtensions
Microsoft.CodeAnalysis.PooledObjects.StatelessReadOnlySpanAction<T>
Microsoft.CodeAnalysis.PooledObjects.StatelessSpanAction<T>
static Anabasis.Hosting.AnabasisApp.CreateBuilder(string![]? args = null, System.Action<Anabasis.Hosting.Builder.AnabasisAppOptions!>? configureOptions = null) -> Anabasis.Hosting.Builder.AnabasisAppBuilder!
static Anabasis.Hosting.Builder.AnabasisAppBuilderExtensions.ConfigureServices(this Anabasis.Hosting.Builder.AnabasisAppBuilder! builder, System.Action<Anabasis.Hosting.Builder.AnabasisAppBuilder!, Microsoft.Extensions.DependencyInjection.IServiceCollection!>! configureDelegate) -> Anabasis.Hosting.Builder.AnabasisAppBuilder!
static Anabasis.Hosting.Builder.AnabasisAppBuilderExtensions.ConfigureServices(this Anabasis.Hosting.Builder.AnabasisAppBuilder! builder, System.Action<Anabasis.Hosting.Builder.AnabasisAppBuilder!, Microsoft.Extensions.Hosting.HostBuilderContext!, Microsoft.Extensions.DependencyInjection.IServiceCollection!>! configureDelegate) -> Anabasis.Hosting.Builder.AnabasisAppBuilder!
static Anabasis.Hosting.Builder.AnabasisAppBuilderExtensions.ConfigureServices(this Anabasis.Hosting.Builder.AnabasisAppBuilder! builder, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection!>! configureDelegate) -> Anabasis.Hosting.Builder.AnabasisAppBuilder!
static Anabasis.Hosting.Builder.AnabasisAppBuilderExtensions.ConfigureServices(this Anabasis.Hosting.Builder.AnabasisAppBuilder! builder, System.Action<Microsoft.Extensions.Hosting.HostBuilderContext!, Microsoft.Extensions.DependencyInjection.IServiceCollection!>! configureDelegate) -> Anabasis.Hosting.Builder.AnabasisAppBuilder!
static Anabasis.Hosting.Hosting.AnabasisHostBuilderExtensions.ConfigureAnabasis(this Microsoft.Extensions.Hosting.IHostBuilder! hostBuilder, string![]? args, System.Action<Microsoft.Extensions.Hosting.IHostBuilder!>? configureHost = null) -> Microsoft.Extensions.Hosting.IHostBuilder!
static Anabasis.Hosting.Hosting.AnabasisServiceCollectionExtensions.AddAnabasisCore(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!